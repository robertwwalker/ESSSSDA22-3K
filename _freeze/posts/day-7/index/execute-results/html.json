{
  "hash": "e1c5da9ceef80877e57c4835b7861b66",
  "result": {
    "markdown": "---\ntitle: \"Day 7: Missing Data\"\nauthor: \"Robert W. Walker\"\ndate: \"08/16/2022\"\ncategories: [panel data, code, analysis]\nimage: \"image.jpg\"\n---\n\n\n## Slides\n\n- [Slides in .pdf format](./img/slidesDay7.pdf)\n- [A xaringan for presentation](https://robertwwalker.github.io/xaringan/ESSSSDA22-Day7/)\n\n## Missing Data\n\n## The Data: Poe, Tate, Keith 1999\n\nTwo objectives.  Load the data and transform it into a pdata.frame for now.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(warning=FALSE, message=FALSE, comment=NA, prompt=FALSE)\nlibrary(broom)\nlibrary(plm)\nlibrary(foreign)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::between() masks plm::between()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks plm::lag(), stats::lag()\n✖ dplyr::lead()    masks plm::lead()\n```\n:::\n\n```{.r .cell-code}\nISQ99_Essex <- read.dta(\"./img/ISQ99-Essex.dta\")\nISQ99p <- pdata.frame(ISQ99_Essex, c(\"IDORIGIN\", \"YEAR\"))\n```\n:::\n\n\n## pdata.frame\n\nWill allow R to answer many questions that stata's xt commands make available.  First, some basic summaries to get to balance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ISQ99_Essex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    IDORIGIN          YEAR            AI              SD            POLRT      \n Min.   :  2.0   Min.   :1976   Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:290.0   1st Qu.:1980   1st Qu.:2.000   1st Qu.:1.000   1st Qu.:2.000  \n Median :435.0   Median :1984   Median :3.000   Median :2.000   Median :3.000  \n Mean   :446.7   Mean   :1984   Mean   :2.753   Mean   :2.241   Mean   :3.809  \n 3rd Qu.:640.0   3rd Qu.:1989   3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:6.000  \n Max.   :990.0   Max.   :1993   Max.   :5.000   Max.   :5.000   Max.   :7.000  \n                                NA's   :1061    NA's   :587     NA's   :382    \n      MIL2             LEFT             BRIT            PCGNP      \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :   52  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:  390  \n Median :0.0000   Median :0.0000   Median :0.0000   Median : 1112  \n Mean   :0.2725   Mean   :0.1764   Mean   :0.3554   Mean   : 3592  \n 3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:1.0000   3rd Qu.: 3510  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :36670  \n NA's   :382      NA's   :393      NA's   :290      NA's   :443    \n     AINEW           SDNEW           IDGURR          AILAG          SDLAG      \n Min.   :1.000   Min.   :1.000   Min.   :  2.0   Min.   :1.00   Min.   :1.000  \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:290.0   1st Qu.:1.00   1st Qu.:1.000  \n Median :2.000   Median :2.000   Median :450.0   Median :2.00   Median :2.000  \n Mean   :2.443   Mean   :2.262   Mean   :455.8   Mean   :2.45   Mean   :2.247  \n 3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:663.0   3rd Qu.:3.00   3rd Qu.:3.000  \n Max.   :5.000   Max.   :5.000   Max.   :990.0   Max.   :5.00   Max.   :5.000  \n NA's   :468     NA's   :468                     NA's   :644    NA's   :644    \n    PERCHPCG          PERCHPOP            LPOP          PCGTHOU      \n Min.   :-95.500   Min.   :-48.450   Min.   :11.00   Min.   : 0.050  \n 1st Qu.: -2.545   1st Qu.:  0.910   1st Qu.:14.51   1st Qu.: 0.390  \n Median :  4.615   Median :  2.220   Median :15.59   Median : 1.110  \n Mean   :  4.614   Mean   :  2.193   Mean   :15.48   Mean   : 3.592  \n 3rd Qu.: 11.760   3rd Qu.:  2.940   3rd Qu.:16.64   3rd Qu.: 3.510  \n Max.   :128.570   Max.   :126.010   Max.   :20.89   Max.   :36.670  \n NA's   :618       NA's   :293       NA's   :115     NA's   :443     \n     DEMOC3          CWARCOW         IWARCOW2     \n Min.   : 0.000   Min.   :0.000   Min.   :0.0000  \n 1st Qu.: 0.000   1st Qu.:0.000   1st Qu.:0.0000  \n Median : 0.000   Median :0.000   Median :0.0000  \n Mean   : 3.682   Mean   :0.092   Mean   :0.0862  \n 3rd Qu.: 9.000   3rd Qu.:0.000   3rd Qu.:0.0000  \n Max.   :10.000   Max.   :1.000   Max.   :1.0000  \n NA's   :793      NA's   :407     NA's   :380     \n```\n:::\n\n```{.r .cell-code}\ntable(ISQ99_Essex$IDORIGIN)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    2    20    31    40    41    42    51    52    53    55    56    57    59 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n   70    90    91    92    93    94    95    96   100   101   110   115   130 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  135   140   145   150   155   160   165   200   205   210   211   212   220 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  225   230   235   260   265   290   305   310   315   316   325   333   339 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  345   346   347   348   349   350   352   355   360   365   366   367   368 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  369   370   371   372   373   374 374.1 374.2 374.3 374.4 374.5   375   380 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  385   390   395   402   403   404   411   420   432   433   434   435   436 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  437   438   439   450   451   452   461   471   475   481   482   483   484 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  490   500   501   510   516   517   520   525   530   531   540   541   551 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  552   553   560   562   570   571   572   580   581   590   591   600   615 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  616   620   625   630   640   645   651   652   660   663   666   670   678 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  680   690   692   694   696   698   700   710   712   713   732   740   750 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  760   770   771   775   780   781   790   800   811   812   815   820   821 \n   18    18    18    18    18    18    18    18    18    18    18    18    18 \n  830   840   850   900   910   911   914   920   950   990 \n   18    18    18    18    18    18    18    18    18    18 \n```\n:::\n\n```{.r .cell-code}\ntable(ISQ99_Essex$YEAR)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 \n 179  179  179  179  179  179  179  179  179  179  179  179  179  179  179  179 \n1992 1993 \n 179  179 \n```\n:::\n\n```{.r .cell-code}\nis.pbalanced(ISQ99p)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nIs any variable time invariant?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npvar(ISQ99p)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nno time variation:       IDORIGIN BRIT IDGURR AILAG SDLAG PERCHPCG PERCHPOP \nno individual variation: YEAR AI SD POLRT MIL2 LEFT BRIT PCGNP AINEW SDNEW AILAG SDLAG PERCHPCG PERCHPOP LPOP PCGTHOU DEMOC3 CWARCOW IWARCOW2 \nall NA in time dimension for at least one individual:  AI SD POLRT MIL2 LEFT BRIT PCGNP AINEW SDNEW AILAG SDLAG PERCHPCG PERCHPOP LPOP PCGTHOU DEMOC3 CWARCOW IWARCOW2 \nall NA in ind. dimension for at least one time period: AI SD POLRT MIL2 LEFT BRIT PCGNP AINEW SDNEW AILAG SDLAG PERCHPCG PERCHPOP LPOP PCGTHOU DEMOC3 CWARCOW IWARCOW2 \n```\n:::\n:::\n\n\n## Visualizations of Missingness\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(visdat)\nvis_dat(ISQ99_Essex)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/MP-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvis_miss(ISQ99_Essex)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Univariate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(naniar)\nmplot <- gg_miss_var(ISQ99_Essex)\nmplot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Plot1-1.png){width=672}\n:::\n:::\n\n\n\n## Bivariate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmplot <- ggplot(ISQ99_Essex, \n       aes(x = DEMOC3, \n           y = POLRT)) + \n  geom_point()\nmplot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Plot2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(naniar)\nmplot <- ggplot(ISQ99_Essex, \n       aes(x = DEMOC3, \n           y = POLRT)) + \n  geom_miss_point()\nmplot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Plot3-1.png){width=672}\n:::\n:::\n\n\n\n\n## Multiple Imputation: Amelia II\n\nA simple multivariate normal is easy as long as the data are well behaved.  NB: This uses none of the time series or cross-sectional dimensionality for identification.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Amelia)\nlibrary(Zelig)\n# Shorten the dataset\nISQ99.4MI <- ISQ99_Essex[,c(1,2,5:11,13:21)]\na.out <- amelia(ISQ99.4MI, m=5, ts=\"YEAR\", cs=\"IDORIGIN\", noms=c(\"MIL2\",\"LEFT\",\"BRIT\",\"CWARCOW\",\"IWARCOW2\"), ords = c(\"AINEW\",\"SDNEW\",\"AILAG\",\"SDLAG\",\"POLRT\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: There are observations in the data that are completely missing. \n         These observations will remain unimputed in the final datasets. \n-- Imputation 1 --\n\n  1  2  3  4  5  6  7\n\n-- Imputation 2 --\n\n  1  2  3  4  5  6  7  8  9\n\n-- Imputation 3 --\n\n  1  2  3  4  5  6  7  8\n\n-- Imputation 4 --\n\n  1  2  3  4  5  6  7  8  9 10\n\n-- Imputation 5 --\n\n  1  2  3  4  5  6\n```\n:::\n:::\n\nWithout simplifying, it crashes because there are id variables of different sorts and other things hiding in there, perfect multicollinearities exist.  Even with them, we need a bit more work.\n\n\n## Transforms are Key\n\n## Using the cs and ts information with polytime/splinetime and intercs\n\n\n::: {.cell}\n\n```{.r .cell-code}\na.out2 <- amelia(ISQ99.4MI, m=5, ts=\"YEAR\", cs=\"IDORIGIN\", polytime=2, intercs=FALSE, noms=c(\"MIL2\",\"LEFT\",\"BRIT\",\"CWARCOW\",\"IWARCOW2\"), ords = c(\"AINEW\",\"SDNEW\",\"AILAG\",\"SDLAG\",\"POLRT\"), p2s=2, emburn = c(20,50))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\namelia starting\nbeginning prep functions\nVariables used:  POLRT PCGNP AINEW SDNEW AILAG SDLAG PERCHPCG PERCHPOP LPOP PCGTHOU DEMOC3 noms.MIL2.2 noms.LEFT.2 noms.BRIT.2 noms.CWARCOW.2 noms.IWARCOW2.2 time.1 time.2 \nrunning bootstrap\n-- Imputation 1 --\nsetting up EM chain indicies\n\n  1(189)  2(182)  3(155)  4(89)  5(13)  6(9)  7(6)  8(1)  9(0) 10(0) 11(0) 12(0) 13(0) 14(0) 15(0) 16(0) 17(0) 18(0) 19(0) 20\n(0)\n\n saving and cleaning\n\nrunning bootstrap\n-- Imputation 2 --\nsetting up EM chain indicies\n\n  1(189)  2(182)  3(162)  4(87)  5(14)  6(5)  7(1)  8(0)  9(0) 10(0) 11(0) 12(0) 13(0) 14(0) 15(0) 16(0) 17(0) 18(0) 19(0) 20\n(0)\n\n saving and cleaning\n\nrunning bootstrap\n-- Imputation 3 --\nsetting up EM chain indicies\n\n  1(188)  2(183)  3(157)  4(76)  5(29)  6(17)  7(8)  8(0)  9(0) 10(0) 11(0) 12(0) 13(0) 14(0) 15(0) 16(0) 17(0) 18(0) 19(0) 20\n(0)\n\n saving and cleaning\n\nrunning bootstrap\n-- Imputation 4 --\nsetting up EM chain indicies\n\n  1(189)  2(181)  3(153)  4(60)  5(20)  6(13)  7(7)  8(2)  9(0) 10(0) 11(0) 12(0) 13(0) 14(0) 15(0) 16(0) 17(0) 18(0) 19(0) 20\n(0)\n\n saving and cleaning\n\nrunning bootstrap\n-- Imputation 5 --\nsetting up EM chain indicies\n\n  1(189)  2(181)  3(160)  4(90)  5(25)  6(12)  7(3)  8(0)  9(0) 10(0) 11(0) 12(0) 13(0) 14(0) 15(0) 16(0) 17(0) 18(0) 19(0) 20\n(0)\n\n saving and cleaning\n```\n:::\n\n```{.r .cell-code}\nsummary(a.out2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nAmelia output with 5 imputed datasets.\nReturn code:  1 \nMessage:  Normal EM convergence. \n\nChain Lengths:\n--------------\nImputation 1:  20\nImputation 2:  20\nImputation 3:  20\nImputation 4:  20\nImputation 5:  20\n\nRows after Listwise Deletion:  2144 \nRows after Imputation:  3222 \nPatterns of missingness in the data:  65 \n\nFraction Missing for original variables: \n-----------------------------------------\n\n         Fraction Missing\nIDORIGIN       0.00000000\nYEAR           0.00000000\nPOLRT          0.11855990\nMIL2           0.11855990\nLEFT           0.12197393\nBRIT           0.09000621\nPCGNP          0.13749224\nAINEW          0.14525140\nSDNEW          0.14525140\nAILAG          0.19987585\nSDLAG          0.19987585\nPERCHPCG       0.19180633\nPERCHPOP       0.09093731\nLPOP           0.03569212\nPCGTHOU        0.13749224\nDEMOC3         0.24612042\nCWARCOW        0.12631906\nIWARCOW2       0.11793917\n```\n:::\n:::\n\n\nNow let's analyze it.\n\n# Some Analysis\n\nNot a correct model but a first start.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"IQSS/ZeligChoice\")\nlibrary(ZeligChoice)\nModel.a2 <- zelig(AINEW ~ AILAG + MIL2 + LEFT + BRIT + CWARCOW + IWARCOW2 + PCGTHOU + PERCHPOP + DEMOC3, model = \"ls\", data = a.out2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHow to cite this model in Zelig:\n  R Core Team. 2007.\n  ls: Least Squares Regression for Continuous Dependent Variables\n  in Christine Choirat, Christopher Gandrud, James Honaker, Kosuke Imai, Gary King, and Olivia Lau,\n  \"Zelig: Everyone's Statistical Software,\" https://zeligproject.org/\n```\n:::\n\n```{.r .cell-code}\nsummary(Model.a2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel: Combined Imputations \n\n             Estimate Std.Error z value Pr(>|z|)\n(Intercept)  1.040136  0.055780   18.65  < 2e-16\nAILAG        0.621404  0.017965   34.59  < 2e-16\nMIL2         0.110257  0.035754    3.08  0.00204\nLEFT        -0.074708  0.046963   -1.59  0.11166\nBRIT        -0.112423  0.030393   -3.70  0.00022\nCWARCOW      0.532683  0.055780    9.55  < 2e-16\nIWARCOW2     0.180371  0.071370    2.53  0.01150\nPCGTHOU     -0.016131  0.003344   -4.82  1.4e-06\nPERCHPOP    -0.000936  0.003508   -0.27  0.78956\nDEMOC3      -0.030649  0.004348   -7.05  1.8e-12\n\nFor results from individual imputed datasets, use summary(x, subset = i:j)\nStatistical Warning: The GIM test suggests this model is misspecified\n (based on comparisons between classical and robust SE's; see http://j.mp/GIMtest).\n We suggest you run diagnostics to ascertain the cause, respecify the model\n and run it again.\n\nNext step: Use 'setx' method\n```\n:::\n:::\n\n\n## More General\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_imputations <- dplyr::bind_rows(unclass(a.out2$imputations), .id = \"m\") %>%\n  group_by(m) %>%\n  nest()\nall_imputations\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n# Groups:   m [5]\n  m     data                 \n  <chr> <list>               \n1 imp1  <tibble [3,222 × 18]>\n2 imp2  <tibble [3,222 × 18]>\n3 imp3  <tibble [3,222 × 18]>\n4 imp4  <tibble [3,222 × 18]>\n5 imp5  <tibble [3,222 × 18]>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels_imputations <- all_imputations %>%\n  mutate(model = data %>% map(~ lm(AINEW ~ AILAG + MIL2 + LEFT + BRIT + CWARCOW + IWARCOW2 + PCGTHOU + PERCHPOP + DEMOC3, data = .)),\n         tidied = model %>% map(~ tidy(., conf.int = TRUE)),\n         glance = model %>% map(~ glance(.)))\n\nmodels_imputations\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n# Groups:   m [5]\n  m     data                  model  tidied            glance           \n  <chr> <list>                <list> <list>            <list>           \n1 imp1  <tibble [3,222 × 18]> <lm>   <tibble [10 × 7]> <tibble [1 × 12]>\n2 imp2  <tibble [3,222 × 18]> <lm>   <tibble [10 × 7]> <tibble [1 × 12]>\n3 imp3  <tibble [3,222 × 18]> <lm>   <tibble [10 × 7]> <tibble [1 × 12]>\n4 imp4  <tibble [3,222 × 18]> <lm>   <tibble [10 × 7]> <tibble [1 × 12]>\n5 imp5  <tibble [3,222 × 18]> <lm>   <tibble [10 × 7]> <tibble [1 × 12]>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparams <- models_imputations %>%\n  unnest(tidied) %>%\n  select(m, term, estimate, std.error) %>%\n  gather(key, value, estimate, std.error) %>%\n  spread(term, value)\nparams\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 12\n# Groups:   m [5]\n   m     key      (Inte…¹  AILAG    BRIT CWARCOW   DEMOC3 IWARC…²    LEFT   MIL2\n   <chr> <chr>      <dbl>  <dbl>   <dbl>   <dbl>    <dbl>   <dbl>   <dbl>  <dbl>\n 1 imp1  estimate  1.08   0.607  -0.106   0.583  -0.0314   0.187  -0.0867 0.112 \n 2 imp1  std.err…  0.0485 0.0136  0.0279  0.0454  0.00380  0.0456  0.0362 0.0316\n 3 imp2  estimate  1.04   0.623  -0.125   0.520  -0.0334   0.201  -0.114  0.0874\n 4 imp2  std.err…  0.0462 0.0129  0.0267  0.0436  0.00364  0.0443  0.0353 0.0305\n 5 imp3  estimate  0.999  0.637  -0.121   0.537  -0.0281   0.106  -0.0685 0.133 \n 6 imp3  std.err…  0.0455 0.0128  0.0264  0.0432  0.00364  0.0431  0.0343 0.0301\n 7 imp4  estimate  1.03   0.625  -0.116   0.503  -0.0313   0.162  -0.0360 0.113 \n 8 imp4  std.err…  0.0469 0.0132  0.0271  0.0458  0.00373  0.0441  0.0348 0.0312\n 9 imp5  estimate  1.05   0.615  -0.0938  0.521  -0.0291   0.245  -0.0686 0.106 \n10 imp5  std.err…  0.0465 0.0130  0.0269  0.0445  0.00367  0.0428  0.0351 0.0308\n# … with 2 more variables: PCGTHOU <dbl>, PERCHPOP <dbl>, and abbreviated\n#   variable names ¹​`(Intercept)`, ²​IWARCOW2\n# ℹ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njust_coefs <- params %>%\n  filter(key == \"estimate\") %>%\n  ungroup() %>%\n  select(-m, -key)\njust_coefs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 10\n  (Inter…¹ AILAG    BRIT CWARCOW  DEMOC3 IWARC…²    LEFT   MIL2 PCGTHOU PERCHPOP\n     <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>    <dbl>\n1    1.08  0.607 -0.106    0.583 -0.0314   0.187 -0.0867 0.112  -0.0163 -3.91e-4\n2    1.04  0.623 -0.125    0.520 -0.0334   0.201 -0.114  0.0874 -0.0142  5.02e-4\n3    0.999 0.637 -0.121    0.537 -0.0281   0.106 -0.0685 0.133  -0.0162 -3.14e-3\n4    1.03  0.625 -0.116    0.503 -0.0313   0.162 -0.0360 0.113  -0.0146 -1.57e-3\n5    1.05  0.615 -0.0938   0.521 -0.0291   0.245 -0.0686 0.106  -0.0193 -8.16e-5\n# … with abbreviated variable names ¹​`(Intercept)`, ²​IWARCOW2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njust_ses <- params %>%\n  filter(key == \"std.error\") %>%\n  ungroup() %>%\n  select(-m, -key)\njust_ses\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 10\n  (Interce…¹  AILAG   BRIT CWARCOW  DEMOC3 IWARC…²   LEFT   MIL2 PCGTHOU PERCH…³\n       <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>   <dbl>\n1     0.0485 0.0136 0.0279  0.0454 0.00380  0.0456 0.0362 0.0316 0.00255 0.00323\n2     0.0462 0.0129 0.0267  0.0436 0.00364  0.0443 0.0353 0.0305 0.00250 0.00305\n3     0.0455 0.0128 0.0264  0.0432 0.00364  0.0431 0.0343 0.0301 0.00246 0.00309\n4     0.0469 0.0132 0.0271  0.0458 0.00373  0.0441 0.0348 0.0312 0.00251 0.00317\n5     0.0465 0.0130 0.0269  0.0445 0.00367  0.0428 0.0351 0.0308 0.00248 0.00310\n# … with abbreviated variable names ¹​`(Intercept)`, ²​IWARCOW2, ³​PERCHPOP\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoefs_melded <- mi.meld(just_coefs, just_ses)\ncoefs_melded\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$q.mi\n     (Intercept)     AILAG       BRIT  CWARCOW      DEMOC3  IWARCOW2\n[1,]    1.040136 0.6214036 -0.1124235 0.532683 -0.03064904 0.1803708\n            LEFT      MIL2     PCGTHOU      PERCHPOP\n[1,] -0.07470803 0.1102575 -0.01613081 -0.0009362572\n\n$se.mi\n     (Intercept)      AILAG       BRIT    CWARCOW      DEMOC3   IWARCOW2\n[1,]  0.05578001 0.01796531 0.03039278 0.05577991 0.004347858 0.07137014\n           LEFT       MIL2     PCGTHOU    PERCHPOP\n[1,] 0.04696314 0.03575381 0.003344076 0.003508067\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}