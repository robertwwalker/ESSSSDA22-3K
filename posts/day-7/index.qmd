---
title: "Day 7: Missing Data"
author: "Robert W. Walker"
date: "08/16/2022"
categories: [panel data, code, analysis]
image: "image.png"
---

## Slides

- [Slides in .pdf format](./img/slidesDay7.pdf)
- [A xaringan for presentation](https://robertwwalker.github.io/xaringan/ESSSSDA22-Day7/)

## Missing Data


```
use "https://github.com/robertwwalker/Essex-Data/raw/main/ISQ99-Essex.dta"
xtset
drop if AINEW==.
xtset
* Give consideration to what we should do about the Lagged DV
drop if AILAG==.
* A note about long versus flong
mi set flong
* Note that it adds some variables; what are they?
mi describe
mi misstable summarize
* There are some logical restrictions that we are going to want.
* For example, we have some changes that need to be consistent
* with levels.  We can deal with that; just calculate the changes
* after imputation.
mi register imputed DEMOC3
mi impute regress DEMOC3 PERCHPCG PERCHPOP LPOP CWARCOW IWARCOW2, add(10) dots force
* mi impute regress PCGTHOU DEMOC3 PERCHPOP LPOP CWARCOW IWARCOW2, add(20)
mi estimate: xtreg AINEW AILAG DEMOC3, fe
```


## The Data: Poe, Tate, Keith 1999

Two objectives.  Load the data and transform it into a pdata.frame for now.

```{r DatLoad}
knitr::opts_chunk$set(warning=FALSE, message=FALSE, comment=NA, prompt=FALSE)
library(broom)
library(plm)
library(foreign)
library(tidyverse)
ISQ99_Essex <- read.dta("./img/ISQ99-Essex.dta")
ISQ99p <- pdata.frame(ISQ99_Essex, c("IDORIGIN", "YEAR"))
```

## pdata.frame

Will allow R to answer many questions that stata's xt commands make available.  First, some basic summaries to get to balance.

```{r DatSum}
summary(ISQ99_Essex)
table(ISQ99_Essex$IDORIGIN)
table(ISQ99_Essex$YEAR)
is.pbalanced(ISQ99p)
```

Is any variable time invariant?

```{r}
pvar(ISQ99p)
```

## Visualizations of Missingness

```{r MP}
library(visdat)
vis_dat(ISQ99_Essex)
```

```{r}
vis_miss(ISQ99_Essex)
```

## Univariate

```{r Plot1}
library(ggplot2)
library(naniar)
mplot <- gg_miss_var(ISQ99_Essex)
mplot
```


## Bivariate

```{r Plot2}
mplot <- ggplot(ISQ99_Essex, 
       aes(x = DEMOC3, 
           y = POLRT)) + 
  geom_point()
mplot
```


```{r Plot3}
library(naniar)
mplot <- ggplot(ISQ99_Essex, 
       aes(x = DEMOC3, 
           y = POLRT)) + 
  geom_miss_point()
mplot
```



## Multiple Imputation: Amelia II

A simple multivariate normal is easy as long as the data are well behaved.  NB: This uses none of the time series or cross-sectional dimensionality for identification.

```{r}
library(Amelia)
library(Zelig)
# Shorten the dataset
ISQ99.4MI <- ISQ99_Essex[,c(1,2,5:11,13:21)]
a.out <- amelia(ISQ99.4MI, m=5, ts="YEAR", cs="IDORIGIN", noms=c("MIL2","LEFT","BRIT","CWARCOW","IWARCOW2"), ords = c("AINEW","SDNEW","AILAG","SDLAG","POLRT"))
```
Without simplifying, it crashes because there are id variables of different sorts and other things hiding in there, perfect multicollinearities exist.  Even with them, we need a bit more work.


## Transforms are Key

## Using the cs and ts information with polytime/splinetime and intercs

```{r, warning=FALSE, message=FALSE}
a.out2 <- amelia(ISQ99.4MI, m=5, ts="YEAR", cs="IDORIGIN", polytime=2, intercs=FALSE, noms=c("MIL2","LEFT","BRIT","CWARCOW","IWARCOW2"), ords = c("AINEW","SDNEW","AILAG","SDLAG","POLRT"), p2s=2, emburn = c(20,50))
summary(a.out2)
```

Now let's analyze it.

# Some Analysis

Not a correct model but a first start.

```{r}
devtools::install_github("IQSS/ZeligChoice")
library(ZeligChoice)
Model.a2 <- zelig(AINEW ~ AILAG + MIL2 + LEFT + BRIT + CWARCOW + IWARCOW2 + PCGTHOU + PERCHPOP + DEMOC3, model = "ls", data = a.out2)
summary(Model.a2)
```

## More General

```{r}
all_imputations <- dplyr::bind_rows(unclass(a.out2$imputations), .id = "m") %>%
  group_by(m) %>%
  nest()
all_imputations
```

```{r}
models_imputations <- all_imputations %>%
  mutate(model = data %>% map(~ lm(AINEW ~ AILAG + MIL2 + LEFT + BRIT + CWARCOW + IWARCOW2 + PCGTHOU + PERCHPOP + DEMOC3, data = .)),
         tidied = model %>% map(~ tidy(., conf.int = TRUE)),
         glance = model %>% map(~ glance(.)))

models_imputations
```



```{r Last}
params <- models_imputations %>%
  unnest(tidied) %>%
  select(m, term, estimate, std.error) %>%
  gather(key, value, estimate, std.error) %>%
  spread(term, value)
params
```

```{r COEFS}
just_coefs <- params %>%
  filter(key == "estimate") %>%
  ungroup() %>%
  select(-m, -key)
just_coefs
```

```{r SES}
just_ses <- params %>%
  filter(key == "std.error") %>%
  ungroup() %>%
  select(-m, -key)
just_ses
```

```{r Meld}
coefs_melded <- mi.meld(just_coefs, just_ses)
coefs_melded
coefs_melded$q.mi / coefs_melded$se.mi
```
